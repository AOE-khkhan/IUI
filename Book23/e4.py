from cStringIO import StringIO
from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter
from pdfminer.converter import TextConverter
from pdfminer.layout import LAParams
from pdfminer.pdfpage import PDFPage
def convert(fname, pages=None):
    if not pages:
        pagenums = set()
    else:
        pagenums = set(pages)

    output = StringIO()
    manager = PDFResourceManager()
    converter = TextConverter(manager, output, laparams=LAParams())
    interpreter = PDFPageInterpreter(manager, converter)

    infile = file(fname, 'rb')
    for page in PDFPage.get_pages(infile, pagenums):
        interpreter.process_page(page)
    infile.close()
    converter.close()
    text = output.getvalue()
    output.close
    return text

l1 = [['n-folded', 'symmetric', 'images'], ['4-connected', 'neighbors'], ['4-connected', 'neighbors'], ['8-connected', 'neighbors'], ['8-connected', 'neighbors'], ['8-connected', 'neighbors'], ['8-connected', 'neighbors'], ['adaptation'], ['additive', 'color', 'model'], ['af\xef\xac\x81ne', 'coordinate', 'transformation'], ['af\xef\xac\x81ne', 'coordinate', 'transformation'], ['af\xef\xac\x81ne', 'motion'], ['af\xef\xac\x81ne', 'motion', 'parameters'], ['af\xef\xac\x81ne', 'transformations'], ['af\xef\xac\x81ne', 'warping'], ['analysis', 'formula'], ['analytic'], ['analytic', 'functions'], ['analytic', 'signal'], ['aperture', 'problem'], ['area', 'as', 'shape', 'descriptor'], ['averaging', 'linear', 'symmetry', 'tensors'], ['azimuth'], ['balanced', 'direction', 'tensor'], ['balanced', 'directions'], ['balanced', 'directions'], ['balanced', 'directions'], ['balanced', 'directions', 'corner'], ['band-limited', 'functions'], ['basis'], ['basis'], ['basis', 'truncation', 'error'], ['BCC', 'equation'], ['Besinc', 'function'], ['Bessel', 'function'], ['binary', 'images'], ['binary', 'shape'], ['binary', 'shape'], ['black', 'and', 'white', 'motion', 'images'], ['blind', 'spot'], ['blobs'], ['boundary', 'descriptors'], ['boundary', 'estimation'], ['boundary', 're\xef\xac\x81nement'], ['bounding', 'box', 'as', 'shape', 'descriptor'], ['brightness'], ['brightness'], ['brightness', 'axis'], ['brightness', 'constancy', 'constraint', '(BCC)'], ['B-splines'], ['calibration', 'pattern'], ['camera', 'matrix'], ['camera', 'obscura'], ['Cartesian', 'Gabor', 'decomposition'], ['Cartesian', 'grid'], ['Cauchy\xe2\x80\x93Riemann', 'equations'], ['center\xe2\x80\x93surround'], ['center\xe2\x80\x93surround'], ['center\xe2\x80\x93surround'], ['central', 'vision'], ['change', 'of', 'basis'], ['characteristic', 'function'], ['characteristic', 'function'], ['characteristic', 'function'], ['chirality'], ['chromatic', 'light'], ['chromaticity', 'diagram'], ['CIE'], ['circular', 'addition'], ['circular', 'convolution'], ['circular', 'topology', 'of', 'DFT'], ['circular', 'topology', 'of', 'FD'], ['circular', 'translation'], ['circular', 'translation'], ['circularity', 'as', 'shape', 'descriptor'], ['closedness'], ['clustering', 'features'], ['clustering', '\xef\xac\x82ow', 'chart'], ['color'], ['color'], ['color', 'constancy'], ['color', 'motion', 'images'], ['colorimetry'], ['Comb', 'distribution'], ['compactness', 'as', 'shape', 'descriptor'], ['complementary', 'color'], ['complex', 'exponentials'], ['complex', 'moments'], ['complex', 'moments'], ['complex', 'structure', 'tensor'], ['cones'], ['cones'], ['conjugate', 'harmonic', 'function'], ['conjugate', 'symmetry', 'derivative'], ['connected', 'component', 'labelling'], ['continuity'], ['continuous', 'function'], ['continuous', 'image'], ['continuous', 'operators'], ['contralateral', 'side'], ['contralateral', 'view'], ['convergence'], ['convolution'], ['coordinate', 'frame'], ['coordinate', 'transformation'], ['coordinate', 'transformation'], ['coordinates'], ['cornea'], ['corner', 'detection'], ['corner', 'detection'], ['cortical', 'magni\xef\xac\x81cation'], ['covariance', 'matrix'], ['covariance', 'tensor'], ['curvilinear', 'basis'], ['curvilinear', 'coordinates'], ['degree', 'of', 'belongingness'], ['delta', 'function'], ['DFT', 'of', 'convolution'], ['dilation'], ['Dirac', 'distribution', '\xce\xb4(x)'], ['direct', 'tensor', 'sampling'], ['direction', 'estimation', 'by', 'PCA'], ['direction', 'estimation', 'by', 'PCA'], ['direction', 'in', 'ND'], ['direction', 'of', 'hyperplanes'], ['direction', 'of', 'lines'], ['direction', 'tensor'], ['directional', 'dominance', ''], ['discrete', 'grid'], ['discrete', 'GST'], ['discrete', 'GST'], ['discrete', 'samples'], ['discrete', 'structure', 'tensor'], ['discrete', 'structure', 'tensor'], ['double-opponent', 'color', 'cells'], ['double-opponent', 'color', 'property'], ['down-sampling'], ['eccentricity'], ['eigenfaces'], ['electrophoresis'], ['elementary', 'shape', 'features'], ['elevation'], ['epipolar', 'line'], ['epipoles'], ['epipoles'], ['equivalence', 'class'], ['erosion'], ['essential', 'matrix'], ['Euclidean', 'space'], ['explanatory', 'variables'], ['explanatory', 'variables'], ['extrinsic', 'matrix'], ['face', 'recognition'], ['face', 'sensitive', 'cells'], ['facial', 'landmarks'], ['feature', 'image'], ['feature', 'image'], ['\xef\xac\x81nite', 'extension', 'functions'], ['\xef\xac\x81nite', 'extension', 'signals'], ['focal', 'length'], ['focusing', 'on', 'objects'], ['Fourier', 'basis'], ['Fourier', 'coef\xef\xac\x81cients'], ['Fourier', 'coef\xef\xac\x81cients', 'theorem'], ['Fourier', 'descriptors'], ['Fourier', 'transform', 'of', '\xce\xb4(x)'], ['fovea'], ['FT', 'correspondence', 'table'], ['FT', 'of', 'ND', 'hyperplanes'], ['FT', 'pairs', 'table'], ['function', 'addition'], ['function', 'arguments'], ['function', 'scaling'], ['function', 'symbol'], ['function', 'value'], ['fundamental', 'matrix'], ['fusiform', 'gyrus'], ['fuzzy', 'C-means', 'clustering'], ['Gabor', '\xef\xac\x81lter'], ['Gabor', '\xef\xac\x81lter', 'design'], ['Gabor', 'spectrum'], ['Gaussian'], ['Gaussian'], ['Gaussian'], ['Gaussian', 'pyramid'], ['Gaussian', 'pyramid'], ['Gaussian', 'pyramid'], ['Gaussian', 'pyramid'], ['Gaussian', 'pyramid'], ['Gaussians', 'in', 'N', 'dimensions'], ['gender', 'bias'], ['generalized', 'Hough', 'transform', '(GHT)'], ['generalized', 'structure', 'tensor', '(GST)'], ['gray', 'value'], ['grid'], ['grid'], ['grid'], ['group', 'direction'], ['group', 'direction'], ['group', 'direction'], ['group', 'direction', 'by', 'Gabor', '\xef\xac\x81lters'], ['group', 'direction', 'tensor'], ['group', 'direction', 'tensor'], ['grouping'], ['grouping'], ['GST', 'examples'], ['harmonic', 'coordinates'], ['harmonic', 'function'], ['harmonic', 'function', 'pair', '(HFP)'], ['harmonic', 'function', 'pair', '(HFP)'], ['harmonic', 'monomials'], ['Heisenberg', 'uncertainty'], ['Hermitian', 'symmetry'], ['Hermitian', 'symmetry'], ['hexa-angle', 'representation'], ['Hilbert', 'space'], ['Hilbert', 'space'], ['hit\xe2\x80\x93miss', 'transform'], ['homing'], ['homogeneous'], ['homogeneous', 'coordinates'], ['Hough', 'transform'], ['Hough', 'transform', 'of', 'lines'], ['HSB', 'color', 'space'], ['HSV', 'color', 'space'], ['Hu\xe2\x80\x99s', 'moment', 'invariants'], ['hue'], ['image', 'motion'], ['imaging'], ['indeterminacy', 'principle'], ['indicator', 'function'], ['inertia'], ['inertia', 'tensor'], ['inertia', 'tensor'], ['inertia', 'tensor', 'eigenvectors'], ['inferotemporal', 'cortex'], ['in\xef\xac\x81nitesimal', 'generator'], ['inner', 'product', 'space'], ['integral', 'curves'], ['intensity'], ['interpolation', 'function'], ['intrinsic', 'matrix'], ['intrinsic', 'parameters'], ['ipsilateral'], ['isocurve', 'families'], ['isocurves'], ['isocurves'], ['isocurves'], ['isosurfaces'], ['Karhunen\xe2\x80\x93Lo\xc2\xb4eve', '(KL)', 'transform'], ['koniocelullar', 'cells'], ['Kronecker', 'delta', '\xce\xb4(m)'], ['label'], ['label'], ['label', 'image'], ['label', 'image'], ['lack', 'of', 'linear', 'symmetry', ''], ['Laplace', 'equation'], ['Laplacian', 'pyramid'], ['Laplacian', 'pyramid'], ['Laplacian', 'pyramid'], ['Laplacian', 'pyramid'], ['Laplacian', 'pyramid'], ['lateral', 'geniculate', 'nucleus'], ['lateral', 'geniculate', 'nucleus', '(LGN)'], ['lens'], ['Lie', 'group', 'of', 'transformations'], ['Lie', 'operator'], ['light', 'intensity'], ['light', 'intensity'], ['linear', 'operator'], ['linear', 'symmetry', 'in', 'ND'], ['linear', 'symmetry', 'in', 'HFP'], ['linear', 'symmetry', 'tensor'], ['linear', 'symmetry', 'tensor'], ['linearly', 'symmetric', 'image'], ['lines', 'and', 'planes'], ['local', 'image'], ['local', 'spectrum'], ['local', 'spectrum'], ['locally', 'orthogonal'], ['log(z)-pattern', 'family'], ['logarithmic', 'spirals'], ['log\xe2\x80\x93polar', 'frequency', 'plane'], ['log\xe2\x80\x93polar', 'Gabor', 'decomposition'], ['log\xe2\x80\x93polar', 'grid'], ['log\xe2\x80\x93polar', 'mapping'], ['luminance'], ['macula', 'lutea'], ['macular', 'vision'], ['magneto', 'resonance', 'images'], ['magnocellular', 'cells'], ['magnocellular', 'layers'], ['maximum', 'translation', 'error'], ['mean', 'square', 'error'], ['meridian'], ['midget', 'cells'], ['minimum', 'resistance', 'direction'], ['minimum', 'translation', 'error'], ['minutia'], ['model', 'variables'], ['modulo', 'arithmetic', 'of', 'DFT'], ['modulo', 'arithmetic', 'of', 'FD'], ['moment', 'invariants'], ['moment-based', 'shape'], ['moments'], ['moments'], ['monochromatic'], ['morphological', '\xef\xac\x81ltering'], ['morphological', '\xef\xac\x81ltering'], ['morphological', 'operations'], ['motion', '\xef\xac\x81eld'], ['motion', 'as', 'direction'], ['motion', 'by', 'correlation'], ['motion', 'by', 'two', 'frames'], ['motion', 'image'], ['motion-direction'], ['multiple', 'directions'], ['multiplication', 'of', 'two', 'images'], ['multispectral', 'images'], ['music'], ['nasal'], ['nasal', 'hemi\xef\xac\x81eld'], ['neighborhood', 'function'], ['night', 'vision'], ['norm', 'properties'], ['normal', 'image', 'velocity'], ['normal', 'optical', '\xef\xac\x82ow'], ['normal', 'optical', '\xef\xac\x82ow'], ['normalized', 'correlation'], ['Nyquist', 'block'], ['Nyquist', 'block'], ['Nyquist', 'period'], ['Nyquist', 'theorem'], ['object', 'label'], ['observation', 'set'], ['optic', 'axis'], ['optic', 'chiasm'], ['optic', 'nerve'], ['optic', 'radiations'], ['optic', 'tract'], ['optical', 'axis'], ['optical', 'character', 'recognition'], ['optical', 'character', 'recognition', '(OCR)'], ['optical', 'character', 'recognition', '(OCR)'], ['optical', '\xef\xac\x82ow'], ['order', 'of', 'a', 'tensor'], ['orientation'], ['orientation', 'column'], ['oriented', 'butter\xef\xac\x82y', '\xef\xac\x81lters'], ['origin'], ['orthogonal', 'function', 'families'], ['orthogonal', 'vectors'], ['orthogonality'], ['Parseval\xe2\x80\x93Plancherel', 'theorem'], ['Parseval\xe2\x80\x93Plancherel', 'theorem'], ['partial', 'derivatives'], ['parvocellular', 'cells'], ['parvocellular', 'layers'], ['PCA', 'for', 'rare', 'observations'], ['perceptual', 'grouping'], ['perimeter', 'as', 'shape', 'descriptor'], ['periodic', 'functions'], ['periodic', 'signals'], ['photoreceptors'], ['pinhole', 'camera'], ['pixel'], ['pixel'], ['pixel', 'value'], ['pixel', 'value'], ['pointwise', 'convergence'], ['Poisson', 'summation'], ['positive', 'scaling'], ['primary', 'visual', 'cortex'], ['principal', 'component', 'analysis', '(PCA)'], ['principal', 'components'], ['probability', 'distribution', 'function'], ['projection'], ['projection', 'coef\xef\xac\x81cients'], ['projection', 'coef\xef\xac\x81cients'], ['projection', 'coef\xef\xac\x81cients'], ['projection', 'operator'], ['projections'], ['projective', 'camera'], ['prosopagnosia'], ['pupil'], ['pyramid', 'building'], ['pyramids'], ['pyramids'], ['pyramids'], ['pyramids'], ['pyramids'], ['quadratic', 'form'], ['range', 'problem'], ['range', 'problem'], ['real', 'moments'], ['real', 'moments'], ['receptive', '\xef\xac\x81eld'], ['reconstruction'], ['reconstruction'], ['region', 'descriptors'], ['regression', 'coef\xef\xac\x81cients'], ['regression', 'problem'], ['relay', 'cells'], ['response', 'measurement'], ['response', 'variables'], ['retinotopic', 'sensor'], ['RGB', 'cube'], ['rods'], ['rotation', 'aliasing'], ['rotation', 'matrix'], ['rotation', 'of', 'an', 'image'], ['rotation-invariance'], ['rotation-invariance'], ['saccadic', 'search'], ['saccadic', 'search'], ['sampling'], ['saturation'], ['scalar', 'product'], ['scalar', 'product', 'conservation'], ['scalar', 'product', 'of', 'functions'], ['scalar', 'product', 'rules'], ['scale', 'space'], ['scale-invariance'], ['scale-invariance'], ['Schwartz', 'inequality'], ['Schwartz', 'inequality'], ['second-order', 'statistics'], ['segmentation'], ['separable', 'function'], ['shape'], ['shape'], ['shape'], ['shape', 'in', 'gray', 'images'], ['shift-invariance'], ['simple', 'cells'], ['simple', 'cells'], ['simple', 'manifolds'], ['sinc', 'function'], ['sinc', 'function'], ['single', 'direction'], ['singular', 'value', 'decomposition', '(SVD)'], ['spatial', 'continuity'], ['spatial', 'direction'], ['spatial', 'directions', 'constraint'], ['spatial', 'position'], ['spatial', 'resolution'], ['spatio\xe2\x80\x93temporal', 'coordinates'], ['spatio\xe2\x80\x93temporal', 'signal'], ['spectral', 'decomposition'], ['spectral', 'line'], ['spectral', 'plane'], ['spectral', 'theorem'], ['spectrum', 'sampling'], ['steerability'], ['steerable', 'functions'], ['step', 'edge', 'in', '3D'], ['stereo', 'extrinsic', 'matrix'], ['stereo', 'image'], ['stixel'], ['strong', 'convergence'], ['structure', 'element'], ['structure', 'tensor'], ['structure', 'tensor'], ['structure', 'tensor'], ['structure', 'tensor', 'decomposition'], ['structure', 'tensor', 'decomposition'], ['structure', 'tensor', 'decomposition'], ['structure', 'tensor'], ['structure', 'tensor'], ['subtractive', 'color', 'model'], ['superior', 'colliculus'], ['symmetry', 'derivative'], ['symmetry', 'derivative'], ['symmetry', 'derivatives', 'of', 'Gaussians'], ['synthesis'], ['taps'], ['temporal'], ['temporal'], ['temporal', 'hemi\xef\xac\x81eld'], ['tensor', 'values'], ['tensor', '\xef\xac\x81elds'], ['tensor', 'product'], ['tensor', 'sampling', 'in', 'ND'], ['tensors'], ['tensor-valued', 'pixels'], ['tent', 'function'], ['test', 'images'], ['test', 'images'], ['texture'], ['texture'], ['texture'], ['texture'], ['texture', 'features'], ['texture', 'grouping'], ['topographic', 'organization'], ['trace', 'of', 'a', 'matrix'], ['translating', 'lines'], ['translating', 'points'], ['translation-invariance'], ['triangle', 'inequality'], ['triangulation'], ['tune-on', 'frequencies'], ['tune-on', 'frequencies'], ['tune-on', 'frequencies'], ['two', 'lines', 'in', 'translation'], ['uncertainty', 'principle'], ['unit', 'impulse'], ['unsupervised', 'region', 'segregation'], ['unsupervised', 'segmentation'], ['updating', 'class', 'centers'], ['updating', 'partitions'], ['up-sampling'], ['vector', 'addition'], ['vector', 'scaling'], ['vector', 'space'], ['vector', 'space'], ['vectors'], ['velocity', 'of', 'a', 'particle'], ['viewpoint', 'transformation'], ['voting', 'in', 'GST', 'and', 'GHT'], ['voxel'], ['warped', 'image'], ['width', 'of', 'a', 'function'], ['X-ray', 'tomography']]
l2 = [' 316', ' N4', ' 367', ' N8', ' 349', ' 364', ' 367', ' 6', ' 28', ' 267', ' 269', ' 267', ' 269', ' 115', ' 115', ' 71', ' 75', ' 230', ' 99', ' 258', ' 367', ' 176', ' 5', ' 172', ' 172', ' 177', ' 252', ' 177', ' 75', ' 35', ' 48', ' 330', ' 270', ' 107', ' 107', ' 359', ' 366', ' 371', ' 38', ' 8', ' 11', ' 359', ' 354', ' 351', ' 367', ' 31', ' 37', ' 31', ' 256', ' 109', ' 292', ' 287', ' 277', ' 190', ' 145', ' 209', ' 7', ' 24', ' 25', ' 5', ' 50', ' 74', ' 103', ' 127', ' 212', ' 4', ' 26', ' 26', ' 83', ' 92', ' 83', ' 371', ' 83', ' 92', ' 367', ' 36', ' 345', ' 345', ' 21', ' 24', ' 24', ' 38', ' 26', ' 96', ' 367', ' 29', ' 62', ' 163', ' 368', ' 169', ' 5', ' 22', ' 210', ' 231', ' 364', ' 319', ' 57', ' 57', ' 109', ' 10', ' 10', ' 66', ' 90', ' 36', ' 209', ' 213', ' 64', ' 4', ' 176', ' 235', ' 12', ' 333', ' 167', ' 213', ' 209', ' 347', ' 87', ' 93', ' 359', ' 87', ' 180', ' 334', ' 338', ' 245', ' 245', ' 249', ' 164', ' 171', ' 70', ' 221', ' 233', ' 73', ' 182', ' 187', ' 25', ' 11', ' 120', ' 5', ' 336', ' 238', ' 366', ' 5', ' 302', ' 303', ' 304', ' 312', ' 359', ' 303', ' 35', ' 178', ' 338', ' 286', ' 146', ' 18', ' 147', ' 341', ' 343', ' 61', ' 61', ' 278', ' 4', ' 62', ' 63', ' 63', ' 371', ' 90', ' 5', ' 101', ' 247', ' 100', ' 58', ' 58', ' 58', ' 58', ' 58', ' 304', ' 19', ' 347', ' 140', ' 142', ' 139', ' 24', ' 109', ' 125', ' 134', ' 136', ' 234', ' 236', ' 343', ' 130', ' 19', ' 224', ' 215', ' 37', ' 110', ' 121', ' 360', ' 311', ' 312', ' 319', ' 318', ' 315', ' 317', ' 341', ' 354', ' 236', ' 217', ' 209', ' 209', ' 210', ' 228', ' 127', ' 68', ' 98', ' 314', ' 35', ' 57', ' 362', ' 148', ' 282', ' 280', ' 202', ' 199', ' 31', ' 31', ' 369', ' 31', ' 255', ' 37', ' 127', ' 103', ' 248', ' 167', ' 249', ' 249', ' 18', ' 213', ' 35', ' 214', ' 37', ' 74', ' 282', ' 278', ' 10', ' 239', ' 154', ' 214', ' 239', ' 256', ' 329', ' 9', ' 48', ' 348', ' 365', ' 348', ' 365', ' 177', ' 209', ' 134', '136', ' 234', ' 236', ' 343', ' 24', ' 24', ' 4', ' 213', ' 213', ' 4', ' 22', ' 109', ' 246', ' 210', ' 170', ' 171', ' 153', ' 246', ' 7', ' 51', ' 138', ' 210', ' 211', ' 212', ' 146', ' 190', ' 146', ' 146', ' 37', ' 5', ' 5', ' 251', ' 25', ' 10', ' 180', ' 178', ' 5', ' 9', ' 180', ' 180', ' 186', ' 338', ' 83', ' 371', ' 368', ' 368', ' 163', ' 368', ' 4', ' 359', ' 360', ' 360', ' 255', ' 245', ' 272', ' 270', ' 113', ' 14', ' 311', ' 114', ' 38', ' 137', ' 5', ' 5', ' 359', ' 5', ' 41', ' 258', ' 258', ' 259', ' 54', ' 77', ' 104', ' 77', ' 77', ' 365', ' 329', ' 5', ' 9', ' 8', ' 10', ' 9', ' 278', ' 238', ' 54', ' 237', ' 256', ' 50', ' 14', ' 16', ' 351', ' 35', ' 62', ' 46', ' 46', ' 66', ' 89', ' 111', ' 25', ' 10', ' 335', ' 345', ' 367', ' 61', ' 61', ' 3', ' 277', ' 5', ' 37', ' 37', ' 50', ' 66', ' 96', ' 44', ' 11', ' 329', ' 333', ' 125', ' 47', ' 63', ' 64', ' 76', ' 47', ' 63', ' 278', ' 17', ' 4', ' 344', ' 134', ' 136', ' 234', ' 236', ' 343', ' 248', ' 168', ' 319', ' 163', ' 368', ' 7', ' 109', ' 110', ' 359', ' 338', ' 178', ' 10', ' 178', ' 338', ' 146', ' 31', ' 5', ' 115', ' 115', ' 114', ' 373', ' 374', ' 146', ' 147', ' 73', ' 31', ' 44', ' 88', ' 59', ' 45', ' 134', ' 373', ' 374', ' 53', ' 60', ' 318', ' 341', ' 94', ' 311', ' 366', ' 371', ' 311', ' 374', ' 13', ' 146', ' 246', ' 74', ' 75', ' 322', ' 338', ' 348', ' 13', ' 263', ' 38', ' 6', ' 38', ' 3', ' 252', ' 252', ' 252', ' 252', ' 187', ' 230', ' 230', ' 246', ' 296', ' 301', ' 38', ' 66', ' 359', ' 164', ' 167', ' 168', ' 173', ' 175', '', ' decomposition in 3D', ' 252', ' 28', ' 9', ' 231', ' 320', ' 231', ' 109', ' 83', ' 5', ' 113', ' 5', ' 51', ' 53', ' 52', ' 263', ' 50', ' 50', ' 108', ' 313', ' 314', ' 23', ' 318', ' 322', ' 324', ' 324', ' 354', ' 10', ' 250', ' 258', ' 259', ' 374', ' 41', ' 294', ' 142', ' 145', ' 186', ' 261', ' 341', ' 87', ' 341', ' 341', ' 346', ' 345', ' 121', ' 36', ' 36', ' 36', ' 41', ' 35', ' 270', ' 50', ' 226', ' 38', ' 273', ' 126', ' 251']

print len(l1)
print len(l2)
for faf in range(len(l2)):
    tex = l1[faf]
    tex2 = l2[faf]
    if any(c.isalpha() for c in tex2) or len(tex2)>4 or tex2=='':
        continue
    print tex
    m = convert('IP3.pdf', pages=[int(tex2)+0])

    m = m.split('\n\n')
    f2 = open("xxIP3.txt",'a')
    f3 = open("yyIP3.txt",'a')
    for k in m:
        if len(k)>150:
            s = ""
            k = list(k)
            chick = []
            mac = 0
            while mac<len(k):
            #print k[mac]
                if k[mac]=='\n':
                #k[m] = " "
                    chick.append(' ')

                elif k[mac]=='-':
                    temp = mac+1
                #print "True"
                    if temp!=len(k) and k[temp]=='\n':
                    #print "True"
                        mac = mac+1
                    else:
                        chick.append(k[mac].lower())
                else:
                    chick.append(k[mac].lower())
                mac = mac+1
            k = chick

            
        
            print "".join(k).strip()
            temp = "".join(k)

            temp.strip()
            f2.write(temp)
            f2.write("\n")

            temp = temp.split(' ')
            l = []
            for cha in temp:
                #if "isymmetric" in cha: #or "pproxmia" in cha:
                #    l.append(1)
                check = 0
                for vv in tex:
                    if vv.lower() in cha and vv!='':
                        print cha
                        l.append(1)
                        check=1
                        break
                if check==0:
                    l.append(0)
            print len(temp)
            print len(l)
            lll = ",".join(str(x) for x in l)
            f3.write(lll)
            f3.write("\n")
            print "\n"
            print l
            print "\n"
    f2.close()
    f3.close()
