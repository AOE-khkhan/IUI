from cStringIO import StringIO
from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter
from pdfminer.converter import TextConverter
from pdfminer.layout import LAParams
from pdfminer.pdfpage import PDFPage
def convert(fname, pages=None):
    if not pages:
        pagenums = set()
    else:
        pagenums = set(pages)

    output = StringIO()
    manager = PDFResourceManager()
    converter = TextConverter(manager, output, laparams=LAParams())
    interpreter = PDFPageInterpreter(manager, converter)

    infile = file(fname, 'rb')
    for page in PDFPage.get_pages(infile, pagenums):
        interpreter.process_page(page)
    infile.close()
    converter.close()
    text = output.getvalue()
    output.close
    return text


l1 = [['20\xe2\x80\x9322'], ['20\xe2\x80\x9322'], ['20\xe2\x80\x9322'], ['20\xe2\x80\x9322'], ['20\xe2\x80\x9322'], ['20\xe2\x80\x9322'], ['158'], ['158'], ['158'], ['158'], ['158'], ['158'], ['218'], ['218'], ['218'], ['218'], ['218'], ['218'], ['389'], ['389'], ['389'], ['389'], ['389'], ['389'], ['abstraction'], ['accounting'], ['accounting'], ['Ackermann\xe2\x80\x99s', 'function'], ['aggregate', 'type'], ['de\xef\xac\x81nition', 'of'], ['de\xef\xac\x81nition', 'of'], ['asymptotic'], ['asymptotic'], ['asymptotic'], ['asymptotic'], ['asymptotic'], ['asymptotic'], ['asymptotic'], ['empirical', 'comparison'], ['empirical', 'comparison'], ['empirical', 'comparison'], ['empirical', 'comparison'], ['for', 'program', 'statements'], ['for', 'program', 'statements'], ['multiple', 'parameters'], ['multiple', 'parameters'], ['running', 'time', 'measures'], ['space', 'requirements'], ['space', 'requirements'], ['space', 'requirements'], ['all-pairs', 'shortest', 'paths'], ['all-pairs', 'shortest', 'paths'], ['all-pairs', 'shortest', 'paths'], ['all-pairs', 'shortest', 'paths'], ['amortized', 'analysis'], ['amortized', 'analysis'], ['amortized', 'analysis'], ['amortized', 'analysis'], ['amortized', 'analysis'], ['496\xe2\x80\x93499'], ['approximation'], ['dynamic'], ['dynamic'], ['implementation'], ['implementation'], ['arti\xef\xac\x81cial', 'intelligence'], ['ATM', 'machine'], ['average-case', 'analysis'], ['average-case', 'analysis'], ['AVL', 'tree'], ['AVL', 'tree'], ['AVL', 'tree'], ['AVL', 'tree'], ['AVL', 'tree'], ['AVL', 'tree'], ['backtracking'], ['bag'], ['bag'], ['bank'], ['bank'], ['basic', 'operation'], ['basic', 'operation'], ['basic', 'operation'], ['basic', 'operation'], ['basic', 'operation'], ['basic', 'operation'], ['basic', 'operation'], ['best-case', 'analysis'], ['best-case', 'analysis'], ['bin', 'packing'], ['bin', 'packing'], ['binary', 'tree'], ['binary', 'tree'], ['complete'], ['complete'], ['complete'], ['complete'], ['complete'], ['complete'], ['full'], ['full'], ['full'], ['full'], ['full'], ['full'], ['full'], ['implementation'], ['implementation'], ['implementation'], ['node'], ['node'], ['node'], ['node'], ['node'], ['null', 'pointers'], ['overhead'], ['parent', 'pointer'], ['space', 'requirements'], ['space', 'requirements'], ['space', 'requirements'], ['terminology'], ['terminology'], ['threaded'], ['Binsort'], ['Binsort'], ['Binsort'], ['Binsort'], ['Binsort'], ['Binsort'], ['Binsort'], ['bintree'], ['bintree'], ['birthday', 'problem'], ['birthday', 'problem'], ['block'], ['block'], ['Boolean', 'expression'], ['clause'], ['Conjunctive', 'Normal', 'Form'], ['literal'], ['Boolean', 'variable'], ['Boolean', 'variable'], ['Boolean', 'variable'], ['branch', 'and', 'bounds'], ['breadth-\xef\xac\x81rst', 'search'], ['breadth-\xef\xac\x81rst', 'search'], ['breadth-\xef\xac\x81rst', 'search'], ['breadth-\xef\xac\x81rst', 'search'], ['breadth-\xef\xac\x81rst', 'search'], ['250'], ['250'], ['250'], ['250'], ['250'], ['250'], ['375'], ['375'], ['375'], ['375'], ['375'], ['375'], ['475'], ['475'], ['475'], ['ef\xef\xac\x81ciency'], ['insert'], ['insert'], ['remove'], ['remove'], ['search'], ['search'], ['search', 'tree', 'property'], ['B-tree'], ['B-tree'], ['B-tree'], ['B-tree'], ['B-tree'], ['B-tree'], ['B-tree'], ['384'], ['analysis'], ['B+-tree'], ['B+-tree'], ['B+-tree'], ['B+-tree'], ['B+-tree'], ['B+-tree'], ['B+-tree'], ['B\xe2\x88\x97-tree'], ['384'], ['384'], ['Bubble', 'Sort'], ['Bubble', 'Sort'], ['Bubble', 'Sort'], ['Bubble', 'Sort'], ['Bubble', 'Sort'], ['314\xe2\x80\x93316'], ['314\xe2\x80\x93316'], ['314\xe2\x80\x93316'], ['314\xe2\x80\x93316'], ['314\xe2\x80\x93316'], ['ADT'], ['ADT'], ['replacement', 'schemes'], ['replacement', 'schemes'], ['replacement', 'schemes'], ['generic'], ['new'], ['private', 'members'], ['cache'], ['cache'], ['cache'], ['cache'], ['CD-ROM'], ['CD-ROM'], ['CD-ROM'], ['CD-ROM'], ['CD-ROM'], ['ceiling', 'function'], ['city', 'database'], ['city', 'database'], ['city', 'database'], ['city', 'database'], ['class'], ['class'], ['class'], ['clique'], ['clique'], ['clique'], ['clique'], ['clique'], ['cluster', 'problem'], ['cluster', 'problem'], ['code', 'tuning'], ['code', 'tuning'], ['code', 'tuning'], ['code', 'tuning'], ['code', 'tuning'], ['code', 'tuning'], ['Collatz', 'sequence'], ['Collatz', 'sequence'], ['Collatz', 'sequence'], ['Collatz', 'sequence'], ['Collatz', 'sequence'], ['Collatz', 'sequence'], ['compiler'], ['activation', 'record'], ['ef\xef\xac\x81ciency'], ['optimization'], ['complexity'], ['composite', 'type'], ['computability'], ['computability'], ['computability'], ['computer', 'graphics'], ['computer', 'graphics'], ['Dijkstra\xe2\x80\x99s', 'algorithm'], ['Dijkstra\xe2\x80\x99s', 'algorithm'], ['Dijkstra\xe2\x80\x99s', 'algorithm'], ['Dijkstra\xe2\x80\x99s', 'algorithm'], ['420'], ['420'], ['directed', 'acyclic', 'graph', '(DAG)'], ['directed', 'acyclic', 'graph', '(DAG)'], ['directed', 'acyclic', 'graph', '(DAG)'], ['data', 'item'], ['data', 'member'], ['data', 'structure'], ['data', 'structure'], ['de\xef\xac\x81nition'], ['philosophy'], ['philosophy'], ['12\xe2\x80\x9313'], ['12\xe2\x80\x9313'], ['12\xe2\x80\x9313'], ['12\xe2\x80\x9313'], ['12\xe2\x80\x9313'], ['selecting'], ['selecting'], ['data', 'type'], ['decision', 'problem'], ['decision', 'problem'], ['decision', 'problem'], ['decision', 'problem'], ['decision', 'tree'], ['decision', 'tree'], ['image', 'space'], ['key', 'space'], ['object', 'space'], ['depth-\xef\xac\x81rst', 'search'], ['depth-\xef\xac\x81rst', 'search'], ['depth-\xef\xac\x81rst', 'search'], ['depth-\xef\xac\x81rst', 'search'], ['depth-\xef\xac\x81rst', 'search'], ['442'], ['deque'], ['composite'], ['composite'], ['composite'], ['composite'], ['\xef\xac\x82yweight'], ['\xef\xac\x82yweight'], ['\xef\xac\x82yweight'], ['\xef\xac\x82yweight'], ['\xef\xac\x82yweight'], ['strategy'], ['visitor'], ['visitor'], ['visitor'], ['visitor'], ['Deutsch-Schorr-Waite', 'algorithm'], ['Deutsch-Schorr-Waite', 'algorithm'], ['419'], ['419'], ['disk', 'drive'], ['disk', 'drive'], ['disk', 'drive'], ['disk', 'drive'], ['access', 'cost'], ['access', 'cost'], ['access', 'cost'], ['cylinder'], ['cylinder'], ['organization'], ['organization'], ['divide', 'and', 'conquer'], ['divide', 'and', 'conquer'], ['divide', 'and', 'conquer'], ['divide', 'and', 'conquer'], ['divide', 'and', 'conquer'], ['487'], ['487'], ['document', 'retrieval'], ['document', 'retrieval'], ['double', 'buffering'], ['double', 'buffering'], ['double', 'buffering'], ['dynamic', 'memory', 'allocation'], ['dynamic', 'programming'], ['80/20', 'rule'], ['80/20', 'rule'], ['element'], ['homogeneity'], ['homogeneity'], ['implementation'], ['implementation'], ['Emacs', 'text', 'editor'], ['Emacs', 'text', 'editor'], ['encapsulation'], ['entry-sequenced', '\xef\xac\x81le'], ['equivalence'], ['equivalence'], ['class'], ['class'], ['class'], ['class'], ['class'], ['class'], ['class'], ['230'], ['230'], ['230'], ['230'], ['230'], ['relation'], ['relation'], ['dictionary'], ['dictionary'], ['dictionary'], ['estimating'], ['estimating'], ['estimating'], ['estimating'], ['estimating'], ['estimating'], ['estimating'], ['estimating'], ['ADT'], ['ADT'], ['ADT'], ['ADT'], ['ADT'], ['ADT'], ['expression', 'tree'], ['expression', 'tree'], ['extent'], ['factorial', 'function'], ['factorial', 'function'], ['factorial', 'function'], ['factorial', 'function'], ['factorial', 'function'], ['factorial', 'function'], ['76'], ['76'], ['76'], ['76'], ['76'], ['76'], ['Stirling\xe2\x80\x99s', 'approximation'], ['Stirling\xe2\x80\x99s', 'approximation'], ['Fibonacci', 'sequence'], ['Fibonacci', 'sequence'], ['Fibonacci', 'sequence'], ['Fibonacci', 'sequence'], ['FIFO', 'list'], ['\xef\xac\x81le', 'manager'], ['\xef\xac\x81le', 'manager'], ['\xef\xac\x81le', 'manager'], ['\xef\xac\x81le', 'manager'], ['\xef\xac\x81le', 'manager'], ['\xef\xac\x81le', 'manager'], ['\xef\xac\x81le', 'processing'], ['\xef\xac\x81le', 'processing'], ['\xef\xac\x81le', 'processing'], ['\xef\xac\x81le', 'structure'], ['\xef\xac\x81le', 'structure'], ['\xef\xac\x81le', 'structure'], ['\xef\xac\x81le', 'structure'], ['\xef\xac\x82oor', 'function'], ['\xef\xac\x82oppy', 'disk', 'drive'], ['\xef\xac\x82oppy', 'disk', 'drive'], ['\xef\xac\x82oppy', 'disk', 'drive'], ['Floyd\xe2\x80\x99s', 'algorithm'], ['Floyd\xe2\x80\x99s', 'algorithm'], ['Floyd\xe2\x80\x99s', 'algorithm'], ['Floyd\xe2\x80\x99s', 'algorithm'], ['fragmentation'], ['fragmentation'], ['fragmentation'], ['fragmentation'], ['fragmentation'], ['external'], ['internal'], ['internal'], ['free', 'list'], ['free', 'store'], ['free', 'tree'], ['free', 'tree'], ['free', 'tree'], ['freelist'], ['freelist'], ['full', 'binary', 'tree', 'theorem'], ['full', 'binary', 'tree', 'theorem'], ['full', 'binary', 'tree', 'theorem'], ['full', 'binary', 'tree', 'theorem'], ['198'], ['garbage', 'collection'], ['general', 'tree'], ['general', 'tree'], ['ADT'], ['ADT'], ['ADT'], ['converting', 'to', 'binary', 'tree'], ['converting', 'to', 'binary', 'tree'], ['converting', 'to', 'binary', 'tree'], ['dynamic', 'implementations'], ['implementation'], ['implementation'], ['left-child/right-sibling'], ['left-child/right-sibling'], ['list', 'of', 'children'], ['list', 'of', 'children'], ['list', 'of', 'children'], ['list', 'of', 'children'], ['208\xe2\x80\x93216'], ['terminology'], ['terminology'], ['Geographic', 'Information', 'System'], ['geometric', 'distribution'], ['geometric', 'distribution'], ['geometric', 'distribution'], ['geometric', 'distribution'], ['gigabyte'], ['adjacency', 'matrix'], ['adjacency', 'list'], ['adjacency', 'list'], ['adjacency', 'list'], ['adjacency', 'list'], ['adjacency', 'list'], ['adjacency', 'matrix'], ['adjacency', 'matrix'], ['adjacency', 'matrix'], ['adjacency', 'matrix'], ['395\xe2\x80\x93397'], ['ADT'], ['ADT'], ['ADT'], ['connected', 'component'], ['connected', 'component'], ['connected', 'component'], ['edge'], ['implementation'], ['implementation'], ['implementation'], ['modeling', 'of', 'problems'], ['modeling', 'of', 'problems'], ['modeling', 'of', 'problems'], ['405'], ['405'], ['405'], ['representation'], ['representation'], ['terminology'], ['terminology'], ['undirected'], ['undirected'], ['vertex'], ['greedy', 'algorithm'], ['greedy', 'algorithm'], ['greedy', 'algorithm'], ['growth', 'rate'], ['growth', 'rate'], ['growth', 'rate'], ['growth', 'rate'], ['asymptotic'], ['asymptotic'], ['constant'], ['constant'], ['exponential'], ['exponential'], ['exponential'], ['linear'], ['linear'], ['linear'], ['linear'], ['quadratic'], ['quadratic'], ['quadratic'], ['quadratic'], ['quadratic'], ['halting', 'problem'], ['halting', 'problem'], ['Hamiltonian', 'cycle'], ['handle'], ['Harmonic', 'Series'], ['Harmonic', 'Series'], ['Harmonic', 'Series'], ['hashing'], ['hashing'], ['hashing'], ['hashing'], ['hashing'], ['hashing'], ['hashing'], ['hashing'], ['357'], ['357'], ['357'], ['357'], ['357'], ['analysis', 'of'], ['analysis', 'of'], ['bucket'], ['bucket'], ['bucket'], ['closed'], ['closed'], ['closed'], ['collision', 'resolution'], ['collision', 'resolution'], ['collision', 'resolution'], ['collision', 'resolution'], ['350'], ['deletion'], ['deletion'], ['deletion'], ['double'], ['double'], ['dynamic'], ['hash', 'function'], ['hash', 'function'], ['hash', 'function'], ['home', 'position'], ['insert'], ['linear', 'probing'], ['linear', 'probing'], ['linear', 'probing'], ['linear', 'probing'], ['linear', 'probing'], ['350'], ['350'], ['load', 'factor'], ['open'], ['open'], ['perfect'], ['perfect'], ['primary', 'clustering'], ['primary', 'clustering'], ['probe', 'function'], ['probe', 'function'], ['probe', 'sequence'], ['probe', 'sequence'], ['probe', 'sequence'], ['probe', 'sequence'], ['348'], ['348'], ['pseudo-random', 'probing'], ['pseudo-random', 'probing'], ['quadratic', 'probing'], ['quadratic', 'probing'], ['quadratic', 'probing'], ['search'], ['table'], ['tombstone'], ['header', 'node'], ['header', 'node'], ['heap'], ['heap'], ['heap'], ['heap'], ['heap'], ['heap'], ['heap'], ['198'], ['198'], ['198'], ['198'], ['198'], ['198'], ['277'], ['277'], ['building'], ['building'], ['for', 'memory', 'management'], ['insert'], ['max-heap'], ['min-heap'], ['min-heap'], ['partial', 'ordering', 'property'], ['remove'], ['siftdown'], ['siftdown'], ['siftdown'], ['heapsort'], ['Heapsort'], ['Heapsort'], ['Heapsort'], ['Heapsort'], ['Heapsort'], ['heuristic'], ['heuristic'], ['Huffman', 'coding', 'tree'], ['Huffman', 'coding', 'tree'], ['Huffman', 'coding', 'tree'], ['Huffman', 'coding', 'tree'], ['187\xe2\x80\x93198'], ['187\xe2\x80\x93198'], ['187\xe2\x80\x93198'], ['187\xe2\x80\x93198'], ['pre\xef\xac\x81x', 'property'], ['independent', 'set'], ['index'], ['index'], ['index'], ['index'], ['\xef\xac\x81le'], ['\xef\xac\x81le'], ['inverted', 'list'], ['inverted', 'list'], ['linear'], ['linear'], ['linear'], ['linear'], ['linear'], ['tree'], ['tree'], ['tree'], ['induction'], ['induction'], ['induction'], ['induction'], ['induction'], ['induction'], ['induction'], ['199'], ['199'], ['199'], ['199'], ['199'], ['199'], ['inheritance'], ['inheritance'], ['inheritance'], ['inheritance'], ['inheritance'], ['inheritance'], ['166'], ['166'], ['166'], ['input', 'size'], ['input', 'size'], ['Insertion', 'Sort'], ['Insertion', 'Sort'], ['Insertion', 'Sort'], ['Insertion', 'Sort'], ['Insertion', 'Sort'], ['243\xe2\x80\x93246'], ['243\xe2\x80\x93246'], ['243\xe2\x80\x93246'], ['243\xe2\x80\x93246'], ['243\xe2\x80\x93246'], ['272'], ['272'], ['integer', 'representation'], ['integer', 'representation'], ['integer', 'representation'], ['integer', 'representation'], ['integer', 'representation'], ['inversion'], ['inversion'], ['ISAM'], ['ISAM'], ['ISAM'], ['ISAM'], ['generic'], ['\xef\xac\x81le', 'access'], ['\xef\xac\x81le', 'access'], ['new'], ['new'], ['new'], ['k-d', 'tree'], ['k-d', 'tree'], ['k-d', 'tree'], ['k-d', 'tree'], ['k-d', 'tree'], ['k-d', 'tree'], ['K-ary', 'tree'], ['K-ary', 'tree'], ['K-ary', 'tree'], ['K-ary', 'tree'], ['K-ary', 'tree'], ['key'], ['key'], ['kilobyte'], ['knapsack', 'problem'], ['knapsack', 'problem'], ['knapsack', 'problem'], ['419'], ['largest', 'common', 'factor'], ['latency'], ['latency'], ['latency'], ['least', 'frequently', 'used', '(LFU)'], ['least', 'frequently', 'used', '(LFU)'], ['least', 'frequently', 'used', '(LFU)'], ['least', 'recently', 'used', '(LRU)'], ['least', 'recently', 'used', '(LRU)'], ['least', 'recently', 'used', '(LRU)'], ['316'], ['316'], ['LIFO', 'list'], ['LISP'], ['LISP'], ['LISP'], ['LISP'], ['LISP'], ['list'], ['list'], ['list'], ['list'], ['list'], ['list'], ['list'], ['list'], ['ADT'], ['ADT'], ['ADT'], ['ADT'], ['append'], ['append'], ['append'], ['array-based'], ['array-based'], ['array-based'], ['array-based'], ['array-based'], ['117\xe2\x80\x93119'], ['117\xe2\x80\x93119'], ['basic', 'operations'], ['circular'], ['current', 'position'], ['current', 'position'], ['current', 'position'], ['108\xe2\x80\x93110'], ['108\xe2\x80\x93110'], ['doubly', 'linked'], ['doubly', 'linked'], ['doubly', 'linked'], ['doubly', 'linked'], ['doubly', 'linked'], ['space'], ['space'], ['element'], ['element'], ['element'], ['freelist'], ['freelist'], ['freelist'], ['freelist'], ['head'], ['head'], ['head'], ['initialization'], ['initialization'], ['initialization'], ['insert'], ['insert'], ['insert'], ['insert'], ['insert'], ['insert'], ['121\xe2\x80\x93123'], ['link', 'class'], ['link', 'class'], ['linked'], ['linked'], ['linked'], ['linked'], ['linked'], ['linked'], ['117\xe2\x80\x93119'], ['117\xe2\x80\x93119'], ['117\xe2\x80\x93119'], ['117\xe2\x80\x93119'], ['117\xe2\x80\x93119'], ['node'], ['node'], ['node'], ['notation'], ['ordered', 'by', 'frequency'], ['ordered', 'by', 'frequency'], ['ordered', 'by', 'frequency'], ['orthogonal'], ['remove'], ['remove'], ['remove'], ['remove'], ['remove'], ['remove'], ['118'], ['118'], ['118'], ['search'], ['search'], ['search'], ['350'], ['350'], ['350'], ['350'], ['350'], ['singly', 'linked'], ['singly', 'linked'], ['sorted'], ['sorted'], ['sorted'], ['space', 'requirements'], ['space', 'requirements'], ['space', 'requirements'], ['space', 'requirements'], ['tail'], ['terminology'], ['unsorted'], ['locality', 'of', 'reference'], ['locality', 'of', 'reference'], ['locality', 'of', 'reference'], ['locality', 'of', 'reference'], ['multiway', 'merging'], ['multiway', 'merging'], ['multiway', 'merging'], ['multiway', 'merging'], ['365'], ['logarithm'], ['logarithm'], ['logarithm'], ['log\xe2\x88\x97'], ['log\xe2\x88\x97'], ['lookup', 'table'], ['lower', 'bound'], ['lower', 'bound'], ['lower', 'bound'], ['lower', 'bound'], ['sorting'], ['sorting'], ['sorting'], ['map'], ['map'], ['matching'], ['matrix'], ['matrix'], ['multiplication'], ['multiplication'], ['triangular'], ['megabyte'], ['memory', 'management'], ['memory', 'management'], ['memory', 'management'], ['430\xe2\x80\x93443'], ['ADT'], ['ADT'], ['best', '\xef\xac\x81t'], ['best', '\xef\xac\x81t'], ['buddy', 'method'], ['buddy', 'method'], ['buddy', 'method'], ['buddy', 'method'], ['failure', 'policy'], ['failure', 'policy'], ['failure', 'policy'], ['\xef\xac\x81rst', '\xef\xac\x81t'], ['\xef\xac\x81rst', '\xef\xac\x81t'], ['garbage', 'collection'], ['garbage', 'collection'], ['memory', 'allocation'], ['memory', 'pool'], ['sequential', '\xef\xac\x81t'], ['sequential', '\xef\xac\x81t'], ['sequential', '\xef\xac\x81t'], ['worst', '\xef\xac\x81t'], ['metaphor'], ['metaphor'], ['Microsoft', 'Windows'], ['Microsoft', 'Windows'], ['millisecond'], ['minimum-cost', 'spanning', 'tree'], ['minimum-cost', 'spanning', 'tree'], ['minimum-cost', 'spanning', 'tree'], ['389'], ['389'], ['389'], ['389'], ['389'], ['modulus', 'function'], ['modulus', 'function'], ['move-to-front'], ['move-to-front'], ['move-to-front'], ['move-to-front'], ['move-to-front'], ['multilist'], ['multilist'], ['multilist'], ['multilist'], ['nested', 'parentheses'], ['nested', 'parentheses'], ['networks'], ['networks'], ['null', 'pointer'], ['O', 'notation'], ['O', 'notation'], ['O', 'notation'], ['12\xe2\x80\x9316'], ['class'], ['class', 'hierarchy'], ['class', 'hierarchy'], ['class', 'hierarchy'], ['class', 'hierarchy'], ['class', 'hierarchy'], ['members', 'and', 'objects'], ['members', 'and', 'objects'], ['octree'], ['\xe2\x84\xa6', 'notation'], ['\xe2\x84\xa6', 'notation'], ['\xe2\x84\xa6', 'notation'], ['one-way', 'list'], ['operating', 'system'], ['operating', 'system'], ['operating', 'system'], ['operating', 'system'], ['operating', 'system'], ['287'], ['287'], ['287'], ['287'], ['287'], ['287'], ['438'], ['438'], ['Mergesort'], ['Mergesort'], ['Mergesort'], ['Mergesort'], ['Mergesort'], ['Mergesort'], ['overhead'], ['overhead'], ['overhead'], ['275'], ['275'], ['275'], ['external'], ['external'], ['binary', 'tree'], ['matrix'], ['stack'], ['pairing'], ['pairing'], ['palindrome'], ['partial', 'order'], ['partial', 'order'], ['partial', 'order'], ['poset'], ['partition'], ['path', 'compression'], ['path', 'compression'], ['path', 'compression'], ['path', 'compression'], ['path', 'compression'], ['permutation'], ['permutation'], ['permutation'], ['permutation'], ['permutation'], ['permutation'], ['permutation'], ['268\xe2\x80\x93271'], ['Pigeonhole', 'Principle'], ['Pigeonhole', 'Principle'], ['point', 'quadtree'], ['point', 'quadtree'], ['PR', 'quadtree'], ['PR', 'quadtree'], ['PR', 'quadtree'], ['PR', 'quadtree'], ['PR', 'quadtree'], ['466\xe2\x80\x93468'], ['466\xe2\x80\x93468'], ['466\xe2\x80\x93468'], ['466\xe2\x80\x93468'], ['prerequisite', 'problem'], ['Prim\xe2\x80\x99s', 'algorithm'], ['Prim\xe2\x80\x99s', 'algorithm'], ['Prim\xe2\x80\x99s', 'algorithm'], ['Prim\xe2\x80\x99s', 'algorithm'], ['primary', 'index'], ['primary', 'key'], ['priority', 'queue'], ['priority', 'queue'], ['priority', 'queue'], ['priority', 'queue'], ['priority', 'queue'], ['priority', 'queue'], ['probabilistic', 'data', 'structure'], ['probabilistic', 'data', 'structure'], ['problem'], ['problem'], ['problem'], ['problem'], ['analysis', 'of'], ['analysis', 'of'], ['analysis', 'of'], ['analysis', 'of'], ['analysis', 'of'], ['hard'], ['hard'], ['impossible'], ['impossible'], ['NP-complete'], ['NP-complete'], ['NP-complete'], ['problem', 'solving'], ['program'], ['program'], ['running', 'time'], ['running', 'time'], ['programming', 'style'], ['contradiction'], ['contradiction'], ['contradiction'], ['direct'], ['induction'], ['induction'], ['induction'], ['induction'], ['induction'], ['proof', 'by', 'contradiction'], ['proof', 'by', 'contradiction'], ['proof', 'by', 'contradiction'], ['proof', 'by', 'contradiction'], ['pseudo-polynomial', 'time', 'algorithm'], ['queue'], ['queue'], ['queue'], ['queue'], ['queue'], ['queue'], ['queue'], ['array-based'], ['array-based'], ['circular'], ['circular'], ['circular'], ['dequeue'], ['dequeue'], ['empty', 'vs.', 'full'], ['empty', 'vs.', 'full'], ['enqueue'], ['enqueue'], ['implementations', 'compared'], ['linked'], ['linked'], ['linked'], ['terminology'], ['Quicksort'], ['Quicksort'], ['Quicksort'], ['Quicksort'], ['Quicksort'], ['Quicksort'], ['273'], ['273'], ['273'], ['273'], ['273'], ['273'], ['352'], ['analysis'], ['analysis'], ['Radix', 'Sort'], ['Radix', 'Sort'], ['Radix', 'Sort'], ['Radix', 'Sort'], ['RAM'], ['RAM'], ['Random'], ['range', 'query'], ['range', 'query'], ['range', 'query'], ['real-time', 'applications'], ['real-time', 'applications'], ['recurrence', 'relation'], ['recurrence', 'relation'], ['recurrence', 'relation'], ['recurrence', 'relation'], ['recurrence', 'relation'], ['481'], ['481'], ['481'], ['481'], ['divide', 'and', 'conquer'], ['divide', 'and', 'conquer'], ['estimating'], ['estimating'], ['expanding'], ['expanding'], ['expanding'], ['solution'], ['76'], ['76'], ['76'], ['76'], ['76'], ['76'], ['199'], ['199'], ['199'], ['199'], ['199'], ['199'], ['276'], ['implemented', 'by', 'stack'], ['implemented', 'by', 'stack'], ['implemented', 'by', 'stack'], ['replaced', 'by', 'iteration'], ['replaced', 'by', 'iteration'], ['reduction'], ['reduction'], ['reduction'], ['reduction'], ['reduction'], ['reduction'], ['relation'], ['relation'], ['relation'], ['replacement', 'selection'], ['replacement', 'selection'], ['replacement', 'selection'], ['replacement', 'selection'], ['309'], ['309'], ['309'], ['resource', 'constraints'], ['resource', 'constraints'], ['resource', 'constraints'], ['resource', 'constraints'], ['resource', 'constraints'], ['run', '(in', 'sorting)'], ['run', '\xef\xac\x81le'], ['run', '\xef\xac\x81le'], ['running-time', 'equation'], ['satis\xef\xac\x81ability'], ['satis\xef\xac\x81ability'], ['satis\xef\xac\x81ability'], ['sequential'], ['search'], ['search'], ['search'], ['search'], ['binary'], ['binary'], ['binary'], ['binary'], ['binary'], ['binary'], ['binary'], ['binary'], ['352'], ['352'], ['352'], ['352'], ['352'], ['de\xef\xac\x81ned'], ['exact-match', 'query'], ['exact-match', 'query'], ['exact-match', 'query'], ['exact-match', 'query'], ['exact-match', 'query'], ['318'], ['in', 'a', 'dictionary'], ['interpolation'], ['interpolation'], ['interpolation'], ['jump'], ['jump'], ['methods'], ['multi-dimensional'], ['range', 'query'], ['range', 'query'], ['range', 'query'], ['range', 'query'], ['range', 'query'], ['range', 'query'], ['sequential'], ['sequential'], ['sequential'], ['sequential'], ['sequential'], ['sequential'], ['77\xe2\x80\x9379'], ['77\xe2\x80\x9379'], ['77\xe2\x80\x9379'], ['77\xe2\x80\x9379'], ['77\xe2\x80\x9379'], ['77\xe2\x80\x9379'], ['352'], ['sets'], ['sets'], ['successful'], ['unsuccessful'], ['unsuccessful'], ['search', 'trees'], ['search', 'trees'], ['search', 'trees'], ['search', 'trees'], ['search', 'trees'], ['search', 'trees'], ['372'], ['372'], ['372'], ['secondary', 'index'], ['secondary', 'key'], ['secondary', 'storage'], ['secondary', 'storage'], ['secondary', 'storage'], ['secondary', 'storage'], ['sector'], ['sector'], ['sector'], ['sector'], ['seek'], ['seek'], ['Selection', 'Sort'], ['Selection', 'Sort'], ['Selection', 'Sort'], ['Selection', 'Sort'], ['Selection', 'Sort'], ['sequence'], ['sequence'], ['sequence'], ['sequence'], ['sequence'], ['sequence'], ['sequence'], ['359'], ['359'], ['223\xe2\x80\x93226'], ['223\xe2\x80\x93226'], ['serialization'], ['set'], ['set'], ['set'], ['set'], ['powerset'], ['powerset'], ['search'], ['search'], ['search'], ['terminology'], ['terminology'], ['329'], ['Shellsort'], ['Shellsort'], ['Shellsort'], ['Shellsort'], ['Shellsort'], ['shortest', 'paths'], ['shortest', 'paths'], ['shortest', 'paths'], ['shortest', 'paths'], ['simulation'], ['simulation'], ['Skip', 'List'], ['Skip', 'List'], ['Skip', 'List'], ['Skip', 'List'], ['Skip', 'List'], ['slide', 'rule'], ['slide', 'rule'], ['sorting'], ['sorting'], ['sorting'], ['sorting'], ['sorting'], ['sorting'], ['sorting'], ['sorting'], ['sorting'], ['87'], ['87'], ['87'], ['87'], ['87'], ['adaptive'], ['comparing', 'algorithms'], ['comparing', 'algorithms'], ['265\xe2\x80\x93267'], ['265\xe2\x80\x93267'], ['exchange', 'sorting'], ['external'], ['external'], ['external'], ['external'], ['external'], ['298\xe2\x80\x93311'], ['298\xe2\x80\x93311'], ['lower', 'bound'], ['lower', 'bound'], ['lower', 'bound'], ['small', 'data', 'sets'], ['small', 'data', 'sets'], ['small', 'data', 'sets'], ['small', 'data', 'sets'], ['stable', 'algorithms'], ['stable', 'algorithms'], ['stable', 'algorithms'], ['terminology'], ['terminology'], ['spatial', 'data', 'structure'], ['spatial', 'data', 'structure'], ['spatial', 'data', 'structure'], ['splay', 'tree'], ['splay', 'tree'], ['splay', 'tree'], ['splay', 'tree'], ['splay', 'tree'], ['splay', 'tree'], ['455\xe2\x80\x93459'], ['455\xe2\x80\x93459'], ['455\xe2\x80\x93459'], ['455\xe2\x80\x93459'], ['stack'], ['stack'], ['stack'], ['stack'], ['stack'], ['stack'], ['stack'], ['stack'], ['256'], ['256'], ['256'], ['256'], ['256'], ['256'], ['array-based'], ['array-based'], ['constructor'], ['implementations', 'compared'], ['insert'], ['linked'], ['linked'], ['pop'], ['pop'], ['pop'], ['pop'], ['push'], ['push'], ['push'], ['push'], ['remove'], ['terminology'], ['top'], ['top'], ['top'], ['two', 'in', 'one', 'array'], ['two', 'in', 'one', 'array'], ['variable-size', 'elements'], ['Strassen\xe2\x80\x99s', 'algorithm'], ['Strassen\xe2\x80\x99s', 'algorithm'], ['suf\xef\xac\x81x', 'tree'], ['summation'], ['summation'], ['summation'], ['summation'], ['summation'], ['summation'], ['summation'], ['summation'], ['76'], ['76'], ['76'], ['76'], ['76'], ['76'], ['325'], ['325'], ['325'], ['325'], ['325'], ['493\xe2\x80\x93497'], ['guess', 'and', 'test'], ['list', 'of', 'solutions'], ['list', 'of', 'solutions'], ['notation'], ['shifting', 'method'], ['shifting', 'method'], ['shifting', 'method'], ['shifting', 'method'], ['swap'], ['table'], ['tape', 'drive'], ['tape', 'drive'], ['tape', 'drive'], ['text', 'compression'], ['text', 'compression'], ['text', 'compression'], ['text', 'compression'], ['text', 'compression'], ['328\xe2\x80\x93329'], ['328\xe2\x80\x93329'], ['\xce\x98', 'notation'], ['\xce\x98', 'notation'], ['\xce\x98', 'notation'], ['topological', 'sort'], ['topological', 'sort'], ['topological', 'sort'], ['topological', 'sort'], ['total', 'order'], ['total', 'order'], ['total', 'order'], ['Towers', 'of', 'Hanoi'], ['Towers', 'of', 'Hanoi'], ['Towers', 'of', 'Hanoi'], ['Towers', 'of', 'Hanoi'], ['Towers', 'of', 'Hanoi'], ['86'], ['86'], ['space/time', 'principle'], ['space/time', 'principle'], ['space/time', 'principle'], ['space/time', 'principle'], ['124'], ['124'], ['124'], ['transportation', 'network'], ['transportation', 'network'], ['transpose'], ['transpose'], ['transpose'], ['traveling', 'salesman'], ['traveling', 'salesman'], ['traveling', 'salesman'], ['traveling', 'salesman'], ['traveling', 'salesman'], ['582'], ['binary', 'tree'], ['binary', 'tree'], ['binary', 'tree'], ['binary', 'tree'], ['binary', 'tree'], ['167'], ['167'], ['167'], ['167'], ['enumeration'], ['enumeration'], ['enumeration'], ['general', 'tree'], ['general', 'tree'], ['general', 'tree'], ['graph'], ['graph'], ['graph'], ['height', 'balanced'], ['height', 'balanced'], ['height', 'balanced'], ['height', 'balanced'], ['terminology'], ['trie'], ['trie'], ['trie'], ['trie'], ['trie'], ['trie'], ['alphabet'], ['binary'], ['PATRICIA'], ['PATRICIA'], ['PATRICIA'], ['tuple'], ['Turing', 'machine'], ['two-coloring'], ['2-3', 'tree'], ['2-3', 'tree'], ['2-3', 'tree'], ['2-3', 'tree'], ['2-3', 'tree'], ['2-3', 'tree'], ['2-3', 'tree'], ['383'], ['383'], ['383'], ['383'], ['type'], ['uncountability'], ['uncountability'], ['units', 'of', 'measure'], ['units', 'of', 'measure'], ['UNIX'], ['UNIX'], ['UNIX'], ['UNIX'], ['upper', 'bound'], ['upper', 'bound'], ['upper', 'bound'], ['variable-length', 'record'], ['variable-length', 'record'], ['variable-length', 'record'], ['variable-length', 'record'], ['423'], ['423'], ['sorting'], ['vector'], ['Vector'], ['vertex', 'cover'], ['vertex', 'cover'], ['vertex', 'cover'], ['vertex', 'cover'], ['vertex', 'cover'], ['virtual', 'function'], ['virtual', 'memory'], ['virtual', 'memory'], ['virtual', 'memory'], ['virtual', 'memory'], ['weighted', 'union', 'rule'], ['weighted', 'union', 'rule'], ['weighted', 'union', 'rule'], ['227\xe2\x80\x93228'], ['worst-case', 'analysis'], ['worst-case', 'analysis'], ['worst-case', 'analysis'], ['Zipf', 'distribution'], ['Zipf', 'distribution'], ['Zipf', 'distribution'], ['Ziv-Lempel', 'coding'], ['Ziv-Lempel', 'coding']]

l2 = [' 51', ' 99', '103', ' 140', '147', '', ' 171', ' 173', ' 206', '208', ' 216', '', ' 221', ' 227', ' 228', ' 292', '297', '', ' 394', '395', ' 430', ' 446', ' 475', '', ' 11', ' 125', ' 134', ' 226', ' 8', ' 18', '19', ' 4', ' 57', ' 58', ' 67', '73', ' 99', '', ' 57', '58', ' 89', '', ' 74', '79', ' 83', '84', ' 59', ' 58', ' 84', '86', ' 532', '534', ' 551', '', ' 76', ' 119', ' 327', ' 481', '', ' 502', ' 572', ' 118', ' 502', ' 9', ' 22', ' 389', ' 7', ' 63', '65', ' 198', ' 365', ' 447', ' 453', '456', ' 475', ' 571', ' 26', ' 51', ' 6', '7', ' 5', ' 6', ' 21', ' 22', ' 59', ' 61', ' 66', ' 63', '65', ' 572', '573', ' 153', '205', ' 154', ' 155', ' 170', ' 171', ' 181', '', ' 154', '157', ' 169', ' 170', ' 189', ' 198', '', ' 153', ' 156', ' 198', ' 153', ' 157', '158', ' 162', '169', ' 157', ' 169', ' 163', ' 157', ' 163', '', ' 153', '155', ' 202', ' 85', ' 86', ' 259', '265', ' 268', ' 337', ' 557', ' 471', ' 476', ' 332', ' 353', ' 298', ' 303', ' 565', ' 565', ' 565', ' 565', ' 8', ' 30', ' 95', ' 571', ' 389', ' 401', ' 403', ' 404', '', ' 256', ' 364', '367', ' 369', ' 370', '', ' 447', ' 452', '459', ' 461', ' 470', '', ' 476', ' 536', ' 541', ' 179', ' 175', '176', ' 176', '179', ' 173', '174', ' 172', ' 318', ' 331', ' 358', ' 363', ' 372', '382', '', ' 473', ' 381', ' 8', ' 10', ' 359', ' 363', ' 375', '381', '', ' 379', ' 385', ' 448', ' 80', ' 240', '243', ' 266', ' 272', ' 325', ' 326', ' 365', ' 374', '', ' 292', '297', ' 290', '291', '', ' 101', ' 115', ' 106', ' 282', ' 289', '297', ' 325', ' 8', ' 9', ' 281', ' 284', ' 332', ' 30', ' 151', ' 202', ' 465', ' 476', ' 100', ' see object', 'oriented', ' 563', ' 568', ' 569', ' 571', ' 582', ' 230', ' 476', ' 57', '59', ' 87', '90', ' 255', '256', ' 72', ' 93', ' 94', ' 574', ' 581', '', ' 89', ' 129', ' 58', ' 89', ' 11', ' 8', ' 20', ' 574', ' 581', ' 448', ' 459', ' 408', '412', ' 419', '', ' 532', ' 533', ' 391', ' 405', '', ' 8', ' 9', ' 5', ' 9', ' 9', ' 4', '6', ' 99', ' 181', ' 282', ' 293', ' 423', ' 5', '6', ' 9', ' 561', ' 565', ' 566', ' 582', ' 268', '271', ' 448', ' 448', ' 447', ' 389', ' 400', '402', ' 417', '', ' 502', ' 150', ' 15', '16', ' 167', ' 471', ' 13', '14', ' 167', ' 202', '', ' 16', ' 14', '15', ' 161', ' 401', ' 443', '', ' 424', ' 442', ' 9', ' 279', ' 282', '313', ' 286', '288', ' 311', ' 283', ' 363', ' 282', '286', ' 250', ' 252', ' 255', ' 320', '', ' 492', '494', ' 330', ' 352', ' 290', ' 302', ' 304', ' 106', ' 571', ' 325', ' 350', ' 25', ' 100', ' 119', ' 119', '120', ' 441', ' 443', ' 9', ' 357', ' 27', '28', ' 27', ' 205', ' 210', '216', ' 226', '228', '', ' 415', ' 416', ' 419', ' 421', ' 476', ' 27', ' 50', ' 173', ' 345', '449', ' 25', ' 47', '50', ' 54', ' 55', ' 57', '59', '', ' 140', '146', ' 318', ' 356', ' 385', ' 529', ' 163', '169', ' 285', ' 29', ' 34', ' 37', ' 47', ' 51', '', ' 85', ' 91', ' 131', ' 268', ' 271', ' 581', ' 29', ' 271', ' 34', ' 51', '53', ' 96', ' 134', ' 282', ' 285', ' 288', ' 431', ' 432', '', ' 86', ' 236', ' 310', ' 9', ' 282', ' 357', ' 382', ' 30', ' 280', ' 281', ' 284', ' 532', '534', ' 551', ' 553', ' 286', ' 288', ' 432', ' 437', '439', ' 432', ' 286', ' 432', ' 151', ' 115', ' 391', ' 411', ' 416', ' 125', ' 128', ' 156', '157', ' 169', '', ' 224', ' 110', ' 205', '230', ' 206', '207', ' 227', ' 220', ' 221', '', ' 228', ' 216', '221', ' 218', ' 228', ' 217', '218', ' 228', ' 391', ' 456', ' 205', '206', ' 8', ' 325', ' 333', ' 538', '', ' 29', ' 427', ' 389', ' 391', ' 392', ' 398', '', ' 389', ' 391', ' 392', '', ' 416', ' 389', ' 394', '395', ' 391', ' 421', '', ' 390', ' 389', ' 394', '397', ' 389', ' 397', '', ' 407', ' 408', ' 411', ' 391', '394', ' 389', '391', ' 390', ' 427', ' 390', ' 192', ' 413', ' 415', ' 57', ' 60', '63', ' 91', ' 67', '68', ' 60', ' 69', ' 61', ' 66', ' 67', ' 61', ' 65', '67', ' 86', ' 61', ' 65', '67', ' 86', ' 87', ' 573', '580', ' 582', ' 439', ' 34', ' 325', ' 496', ' 7', ' 10', ' 31', ' 64', ' 318', ' 330', '351', '', ' 358', ' 372', ' 428', ' 473', ' 502', ' 346', '350', ' 338', '339', ' 356', ' 336', '345', ' 354', ' 331', ' 337', '345', '', ' 352', ' 350', '351', ' 355', ' 345', ' 354', ' 352', ' 331', '336', ' 354', ' 337', ' 339', ' 339', '342', ' 345', ' 349', '', ' 354', ' 356', ' 346', ' 336', '338', ' 331', ' 352', ' 342', '345', ' 340', '345', ' 339', ' 341', '346', '', ' 350', ' 351', ' 343', ' 345', ' 344', ' 345', ' 354', ' 340', ' 330', ' 350', ' 128', ' 137', ' 153', ' 155', ' 171', ' 180', '187', ' 189', '', ' 200', ' 201', ' 203', ' 256', '259', '', ' 409', ' 416', ' 184', '186', ' 431', ' 184', ' 181', ' 181', ' 304', ' 181', ' 187', ' 185', '187', ' 277', ' 277', ' 181', ' 256', '259', ' 266', ' 304', ' 572', '573', ' 153', ' 155', ' 163', '', ' 201', '204', ' 229', ' 448', ' 196', ' 582', ' 12', ' 273', ' 357', '385', ' 300', ' 358', ' 361', ' 383', ' 8', ' 359', '361', ' 383', ' 384', ' 358', ' 364', '381', ' 156', '157', ' 185', ' 193', '195', ' 198', '', ' 228', ' 272', ' 416', ' 487', ' 488', '', ' 101', ' 104', ' 109', ' 146', ' 165', '', ' 168', ' 170', ' see', ' 59', ' 63', ' 80', ' 238', '239', ' 241', '', ' 256', ' 266', ' 268', '270', '', ' 274', '276', ' 5', ' 8', '10', ' 21', ' 151', ' 239', ' 243', ' 358', ' 361', '364', ' 383', ' 13', ' 297', '298', ' 114', '122', ' 431', ' 459', ' 461', '466', ' 471', ' 473', ' 476', ' 221', '223', ' 226', ' 228', ' 466', ' 140', '142', ' 29', ' 570', '571', ' 584', ' 420', ' 52', ' 285', ' 287', ' 288', ' 291', ' 314', '', ' 291', ' 314', '', ' 326', ' 374', ' 125', ' 49', ' 426', ' 440', ' 441', ' 443', ' 24', ' 99', '153', ' 189', ' 358', ' 423', ' 425', '', ' 10', ' 99', '103', ' 147', ' 106', ' 121', ' 122', ' 9', ' 99', ' 103', '106', '', ' 125', ' 150', ' 100', ' 148', ' 100', ' 101', '', ' 113', ' 118', ' 120', '125', ' 148', ' 151', '', ' 124', '125', ' 100', ' 119', '120', ' 114', '117', ' 431', '442', ' 100', ' 106', ' 109', ' 100', ' 104', ' 105', ' 100', ' 106', '110', ' 113', ' 118', '', ' 153', ' 106', '107', ' 9', ' 99', ' 103', ' 106', '113', '', ' 361', ' 423', ' 447', ' 536', '', ' 106', '109', ' 121', ' 100', ' 324', '329', '', ' 428', ' 100', ' 106', ' 110', ' 113', ' 114', '', ' 121', ' 123', ' 124', ' 153', ' 318', '329', ' 351', ' 353', ' 355', ' 456', '', ' 107', ' 120', ' 5', ' 100', ' 146', ' 117', '118', ' 148', '', ' 100', ' 100', ' 100', ' 285', ' 289', ' 349', '', ' 307', '310', ' 314', '', ' 372', ' 31', '32', ' 51', ' 216', ' 226', ' 85', ' 57', ' 70', '72', ' 348', ' 267', '271', ' 556', ' 389', ' 407', ' 572', ' 427', '430', ' 558', ' 559', ' 427', ' 29', ' 12', ' 423', '', ' 445', ' 430', ' 446', ' 435', ' 573', ' 433', ' 436', '437', ' 446', ' 432', ' 438', '443', ' 435', ' 572', ' 439', '443', ' 430', ' 430', ' 433', '436', ' 445', ' 436', ' 11', ' 20', ' 285', ' 311', ' 29', ' 235', ' 259', '', ' 411', '416', ' 419', ' 420', ' 553', ' 28', ' 30', ' 326', '329', ' 353', ' 498', '499', ' 26', ' 423', '426', ' 444', ' 23', ' 150', ' 389', ' 408', ' 107', ' 68', '73', ' 92', ' 21', ' 9', ' 15', '16', ' 163', '169', '', ' 8', ' 9', ' 471', ' 70', '73', ' 92', ' 107', ' 19', ' 180', ' 282', ' 285', '', ' 289', '291', ' 301', ' 304', ' 431', '', ' 439', ' 443', ' 131', ' 246', '249', ' 262', ' 266', '', ' 84', ' 117', '118', ' 487', ' 493', ' 494', ' 301', '304', ' 199', ' 429', ' 129', ' 555', '557', ' 149', ' 28', ' 50', ' 181', ' 28', ' 582', ' 215', '216', ' 227', ' 228', '', ' 30', ' 51', ' 52', ' 85', ' 86', ' 259', '', ' 346', ' 53', ' 137', ' 471', ' 476', ' 14', ' 163', ' 222', ' 459', '', ' 471', ' 473', ' 474', ' 476', ' 389', ' 412', '415', ' 419', ' 420', ' 358', ' 358', ' 153', ' 171', ' 189', ' 203', ' 409', '', ' 529', '', ' 6', ' 17', ' 19', ' 554', ' 57', ' 79', '80', ' 236', '', ' 559', '573', ' 573', '580', ' 560', '573', ' 581', ' 20', ' 3', ' 19', ' 58', '59', ' 20', ' 40', '41', ' 53', ' 40', ' 34', ' 40', '46', ' 49', ' 53', ' 413', ' 556', ' 578', '', ' 570', ' 99', ' 107', ' 133', '140', ' 149', ' 401', '', ' 134', '137', ' 135', '137', ' 149', ' 134', ' 140', ' 136', '137', ' 133', ' 135', ' 140', ' 137', ' 139', ' 140', ' 133', ' 131', ' 239', ' 249', '257', ' 266', '', ' 274', ' 276', ' 299', ' 301', ' 304', '', ' 481', ' 495', '496', ' 260', '266', ' 268', ' 276', ' 280', ' 281', ' 30', ' 358', ' see search', ' range', ' 64', ' 65', ' 34', '36', ' 53', ' 254', '', ' 487', '496', ' 499', ' 501', ' 492', '494', ' 487', '490', ' 491', ' 492', ' 501', ' 36', ' 130', ' 159', '161', ' 174', ' 175', '', ' 202', ' 247', ' 249', ' 273', ' 275', '', ' 442', ' 129', '133', '', ' 51', ' 131', ' 268', ' 554', '559', ' 579', ' 581', ' 583', ' 27', '29', ' 50', ' 181', ' 304', '307', '', ' 314', ' 316', ' 481', ' 5', ' 6', ' 17', ' 57', ' 58', ' 301', ' 301', ' 302', ' 60', ' 565', '569', ' 571', ' 22', ' 23', ' 87', ' 317', '357', ' 31', ' 77', '79', ' 94', '96', ' 272', ' 320', '', ' 359', ' 360', ' 374', ' 493', ' 502', ' 317', ' 7', '8', ' 10', ' 317', '', ' 357', ' 320', ' 320', '323', ' 352', ' 319', '320', ' 317', ' 459', ' 8', ' 10', ' 317', ' 330', ' 357', '', ' 59', '60', ' 63', '64', ' 69', '', ' 94', '96', ' 318', '319', ' 328', '', ' 496', ' 329', '330', ' 317', ' 317', ' 346', ' 64', ' 180', ' 358', ' 363', ' 365', '', ' 452', ' 456', ' 459', ' 358', ' 358', ' 279', '288', ' 311', '313', ' 283', ' 286', ' 288', ' 299', ' 285', ' 286', ' 241', '243', ' 256', ' 266', ' 272', ' 27', ' 30', ' 51', ' 100', ' 318', ' 329', '', ' 554', ' 555', ' 228', ' 229', ' 223', ' 25', '29', ' 51', ' 330', ' 26', ' 29', ' 318', ' 329', '330', ' 25', '26', ' 353', ' 239', ' 244', '246', ' 266', ' 274', ' 389', ' 407', '411', ' 419', ' 89', '90', ' 529', ' 536', '541', ' 551', ' 552', ' 32', ' 547', ' 18', ' 22', '24', ' 59', ' 64', ' 65', ' 80', ' 83', '', ' 235', '277', ' 319', ' 328', '', ' 271', ' 237', '', ' 309', ' 310', ' 243', ' 171', ' 236', ' 257', ' 279', '', ' 314', '316', ' 236', ' 267', '271', ' 237', ' 255', ' 271', ' 275', ' 236', ' 272', ' 273', ' 236', '237', ' 447', ' 459', '473', ' 180', ' 198', ' 365', ' 447', ' 453', '', ' 473', '476', ' 482', ' 536', ' 99', ' 107', ' 125', '133', ' 149', ' 199', ' 202', '', ' 272', ' 273', ' 276', ' 400', '402', '', ' 125', '126', ' 125', ' 129', ' 125', ' 128', ' 129', ' 125', ' 126', ' 128', ' 151', ' 125', ' 126', ' 128', ' 151', ' 125', ' 125', ' 125', '126', ' 128', ' 129', ' 149', ' 151', ' 543', ' 552', ' 475', ' 33', '34', ' 42', '44', ' 53', ' 54', ' 75', '', ' 95', ' 180', ' 186', ' 254', ' 324', '', ' 427', ' 481', '486', ' 491', '', ' 500', ' 500', ' 33', ' 34', ' 33', ' 483', '486', ' 495', '', ' 30', ' 318', ' 282', ' 283', ' 298', ' 153', ' 187', '198', ' 282', '', ' 351', ' 355', ' 71', '73', ' 94', ' 389', ' 405', '406', ' 418', ' 29', ' 51', ' 181', ' 37', '39', ' 131', ' 553', ' 559', ' 282', ' 349', ' 85', '86', ' 101', '', ' 187', ' 282', ' 349', ' 389', ' 407', ' 327', ' 328', ' 353', ' 561', '563', ' 570', '572', '', ' 584', ' 131', ' 153', ' 158', '162', '', ' 172', ' 180', ' 199', ' 397', ' 158', ' 172', ' 223', ' 207', '208', ' 227', ' 389', ' 397', '406', ' 371', ' 372', ' 374', ' 536', ' 153', ' 163', ' 265', ' 447', '452', ' 473', ' 475', ' 449', ' 448', ' 451', '452', ' 473', ' 27', ' 566', ' 45', ' 180', ' 358', ' 366', '371', ' 374', ' 378', '', ' 384', ' 452', ' 502', ' 536', ' 8', ' 574', '577', ' 29', ' 49', ' 250', ' 285', ' 311', ' 441', ' 57', ' 68', '72', ' 151', ' 359', ' 384', '', ' 425', ' 430', ' 237', ' 27', ' 118', ' 568', ' 571', ' 572', ' 582', ' 584', ' 170', ' 291', '293', ' 301', ' 314', ' 214', '215', '', ' 504', ' 63', '65', ' 68', ' 325', ' 333', ' 353', ' 329', ' 352']
print len(l1)
print len(l2)
for faf in range(len(l2)):
    tex = l1[faf]
    tex2 = l2[faf]
    if any(c.isalpha() for c in tex2) or len(tex2)>4 or tex2=='':
        continue
    print tex
    m = convert('Algo6.pdf', pages=[int(tex2)+18])

    m = m.split('\n\n')
    f2 = open("xxAlgo6.txt",'a')
    f3 = open("yyAlgo6.txt",'a')
    for k in m:
        if len(k)>150:
            s = ""
            k = list(k)
            chick = []
            mac = 0
            while mac<len(k):
            #print k[mac]
                if k[mac]=='\n':
                #k[m] = " "
                    chick.append(' ')

                elif k[mac]=='-':
                    temp = mac+1
                #print "True"
                    if temp!=len(k) and k[temp]=='\n':
                    #print "True"
                        mac = mac+1
                    else:
                        chick.append(k[mac].lower())
                else:
                    chick.append(k[mac].lower())
                mac = mac+1
            k = chick

            
        
            print "".join(k).strip()
            temp = "".join(k)

            temp.strip()
            f2.write(temp)
            f2.write("\n")

            temp = temp.split(' ')
            l = []
            for cha in temp:
                #if "isymmetric" in cha: #or "pproxmia" in cha:
                #    l.append(1)
                check = 0
                for vv in tex:
                    if vv.lower() in cha and vv!='':
                        print cha
                        l.append(1)
                        check=1
                        break
                if check==0:
                    l.append(0)
            print len(temp)
            print len(l)
            lll = ",".join(str(x) for x in l)
            f3.write(lll)
            f3.write("\n")
            print "\n"
            print l
            print "\n"
    f2.close()
    f3.close()
